<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ assembly name="C:\Users\Administrator\.nuget\packages\MySql.Data\8.0.15\lib\net452\MySql.Data.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="MySql.Data.MySqlClient" #>

<#@ include file="$(ProjectDir)DbHelper.ttinclude"  #>
<#@ include file="$(ProjectDir)ModelAuto.ttinclude"	#>


<# 
    var OutputPath1 = Path.GetDirectoryName(Host.TemplateFile)+"\\work";
	if (!Directory.Exists(OutputPath1))
	{
	    Directory.CreateDirectory(OutputPath1);
	}
	#> 
<# var manager = new Manager(Host, GenerationEnvironment, true) { OutputPath = OutputPath1 }; #>

<# 
	var tableName=config.TableName;
 #>
<# 
if(tableName!=""){
    #>  
<# manager.StartBlock(tableName +"Controllers"+".cs"); #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using <#=config.ModelNameSpace#>;
using <#=config.ServicesNameSpace#>;
using <#=config.IServicesNameSpace#>;

namespace <#=config.ControllersNameSpace#>
{	
	/// <summary>
	/// <#=tableName#>Controllers
	/// </summary>	
	[Route("api/[controller]")]
    [ApiController]
	public class <#=tableName#>Controller : ControllerBase
    { 
		 I<#=tableName#>Services <#=tableName#>Services=new <#=tableName#>Services();
		 [HttpGet]
        public async Task<List<<#=tableName#>>> Get()
        {
            return await <#=tableName#>Services.Query();
        }

        // GET: api/a_data_access/5
        [HttpGet("{id}")]
        public async Task<List<<#=tableName#>>> Get(int id)
        {
            return await <#=tableName#>Services.Query(c => c.ID == id);
        }

        // POST: api/a_department
        [HttpPost]
        public void Post([FromBody] string value)
        {
        }

        // PUT: api/a_department/5
        [HttpPut("{id}")]
        public void Put(int id, [FromBody] string value)
        {
        }

        // DELETE: api/ApiWithActions/5
        [HttpDelete("{id}")]
        public void Delete(int id)
        {
        }
    }
}

<# 
  manager.EndBlock();
  manager.Process(true);
    } else{ 

	#>

<# 
    MySqlConnection conn = new MySqlConnection(config.ConnectionString); 
    conn.Open(); 
    System.Data.DataTable schema = conn.GetSchema("TABLES"); 
 #>

<# 
    foreach(System.Data.DataRow row in schema.Rows) 
    {  
		manager.StartBlock(row["TABLE_NAME"].ToString()+"Controllers"+".cs");
	 #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using <#=config.ModelNameSpace#>;
using <#=config.ServicesNameSpace#>;
using <#=config.IServicesNameSpace#>;

namespace <#=config.ControllersNameSpace#>
{	
	/// <summary>
	/// <#=row["TABLE_NAME"].ToString()#>Controllers
	/// </summary>	
	[Route("api/[controller]")]
    [ApiController]
	public class <#=row["TABLE_NAME"].ToString()#>Controller : ControllerBase
    { 
		 I<#=row["TABLE_NAME"].ToString()#>Services <#=row["TABLE_NAME"].ToString()#>Services=new <#=row["TABLE_NAME"].ToString()#>Services();
		 [HttpGet]
        public async Task<List<<#=row["TABLE_NAME"].ToString()#>>> Get()
        {
            return await <#=row["TABLE_NAME"].ToString()#>Services.Query();
        }

        // GET: api/a_data_access/5
        [HttpGet("{id}")]
        public async Task<List<<#=row["TABLE_NAME"].ToString()#>>> Get(int id)
        {
            return await <#=row["TABLE_NAME"].ToString()#>Services.Query(c => c.ID == id);
        }

        // POST: api/a_department
        [HttpPost]
        public void Post([FromBody] string value)
        {
        }

        // PUT: api/a_department/5
        [HttpPut("{id}")]
        public void Put(int id, [FromBody] string value)
        {
        }

        // DELETE: api/ApiWithActions/5
        [HttpDelete("{id}")]
        public void Delete(int id)
        {
        }
    }
}

	<# 
		manager.EndBlock(); 
		} 

		
		manager.Process(true);
	}
	#> 

