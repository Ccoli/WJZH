<#@ template debug="false" hostspecific="True" language="C#" #>
<#@ output extension=".cs" #>

<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ assembly name="C:\Users\Administrator\.nuget\packages\MySql.Data\8.0.15\lib\net452\MySql.Data.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="MySql.Data.MySqlClient" #>

<#@ include file="$(ProjectDir)DbHelper.ttinclude"  #>
<#@ include file="$(ProjectDir)ModelAuto.ttinclude"	#>

<#
    // 是否是WCF服务模型
    bool serviceModel = false;
   
    // 数据库连接
    var connectionString = @"Data Source=192.168.19.20;User Id=zhxx;Password=zhxxadmin;pooling=false;CharSet=utf8;port=3306";

    // 需要解析的数据库
    var database = new List<string> { "wjzh" };

    // 文件版权信息
    var copyright = DateTime.Now.Year + " xxxx Enterprises All Rights Reserved";
    var version = Environment.Version;
    var author = "auto generated by T4";

	 var OutputPath1 = Path.GetDirectoryName(Host.TemplateFile)+"\\work";
	if (!Directory.Exists(OutputPath1))
	{
		Directory.CreateDirectory(OutputPath1);
	}

    var manager = new Manager(Host, GenerationEnvironment, true) { OutputPath = OutputPath1 };
    var entities = EntityHelper.GetEntities(connectionString, database);

    foreach(Entity entity in entities)
    {
        manager.StartBlock(entity.EntityName + ".cs");
#>
//-----------------------------------------------------------------------
// <copyright file=" <#= entity.EntityName #>.cs" company="xxxx Enterprises">
// * Copyright (C) <#= copyright #>
// * version : <#= version #>
// * author  : <#= author #>
// * FileName: <#= entity.EntityName #>.cs
// * history : Created by T4 <#= DateTime.Now #>
// </copyright>
//-----------------------------------------------------------------------
using System;
<#    if(serviceModel)
    {
#>
using System.Runtime.Serialization;
<#
    }
#>

namespace <#=config.ModelNameSpace#>
{
    /// <summary>
    /// <#= entity.EntityName #> Entity Model
    /// </summary>   
    [Serializable]
<#    if(serviceModel)
    {
#>
    [DataContract]
<#
    }
#>
    public class <#= entity.EntityName #>
    {
<#
        for(int i = 0; i < entity.Fields.Count; i++)
        {
            if(i ==0){
#>        /// <summary>
        /// <#= entity.Fields[i].Comment #>
        /// </summary>
<#    if(serviceModel)
    {
#>
        [DataMember]
<#
    }
#>
        public <#= entity.Fields[i].Type #> <#= entity.Fields[i].Name #> { get; set; }
<#
            }
            else{
#>   
        /// <summary>
        /// <#= entity.Fields[i].Comment #>
        /// </summary>
<#    if(serviceModel)
    {
#>
        [DataMember]
<#
    }
#>
        public <#= entity.Fields[i].Type #> <#= entity.Fields[i].Name #> { get; set; }
<#            }
        }
#>
    }
}
<#       
        manager.EndBlock();
    }

    manager.Process(true);
#>
