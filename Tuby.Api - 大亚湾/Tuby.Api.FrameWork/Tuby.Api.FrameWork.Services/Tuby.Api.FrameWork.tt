<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ assembly name="C:\Users\Administrator\.nuget\packages\MySql.Data\8.0.15\lib\net452\MySql.Data.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="MySql.Data.MySqlClient" #>

<#@ include file="$(ProjectDir)DbHelper.ttinclude"  #>
<#@ include file="$(ProjectDir)ModelAuto.ttinclude"	#>


<# 
    var OutputPath1 = Path.GetDirectoryName(Host.TemplateFile)+"\\work";
	if (!Directory.Exists(OutputPath1))
	{
	    Directory.CreateDirectory(OutputPath1);
	}
	#> 
<# var manager = new Manager(Host, GenerationEnvironment, true) { OutputPath = OutputPath1 }; #>

<# 
	var tableName=config.TableName;
 #>
<# 
if(tableName!=""){
    #>  
<# manager.StartBlock(tableName +"Service"+".cs"); #>
using System;
using <#=config.ModelNameSpace#>;
using <#=config.IRepositoryNameSpace#>;
using <#=config.IServicesNameSpace#>;
using Tuby.Api.Services.BASE;

namespace <#=config.ServicesNameSpace#>
{	
	/// <summary>
	/// <#=tableName#>Service
	/// </summary>	
	public class <#=tableName#>Services : BaseServices<<#=tableName#>>, I<#=tableName#>Services
    { 
		 I<#=tableName#>Repository dal;
        public <#=tableName#>Services(I<#=tableName#>Repository dal)
        {
            this.dal = dal;
			base.baseDal = dal;
        } 
    }
}

<# 
  manager.EndBlock();
  manager.Process(true);
    } else{ 

	#>

<# 
    MySqlConnection conn = new MySqlConnection(config.ConnectionString); 
    conn.Open(); 
    System.Data.DataTable schema = conn.GetSchema("TABLES"); 
 #>

<# 
    foreach(System.Data.DataRow row in schema.Rows) 
    {  
		manager.StartBlock(row["TABLE_NAME"].ToString()+"Service"+".cs");
	 #>
using System;
using <#=config.ModelNameSpace#>;
using <#=config.IRepositoryNameSpace#>;
using <#=config.IServicesNameSpace#>;
using Tuby.Api.Services.BASE;

namespace <#=config.ServicesNameSpace#>
{	
	/// <summary>
	/// <#=row["TABLE_NAME"].ToString()#>Services
	/// </summary>	
	public class <#=row["TABLE_NAME"].ToString()#>Services : BaseServices<<#=row["TABLE_NAME"].ToString()#>>, I<#=row["TABLE_NAME"].ToString() #>Services
    {
	
        I<#=row["TABLE_NAME"].ToString() #>Repository dal;
        public <#=row["TABLE_NAME"].ToString() #>Services(I<#=row["TABLE_NAME"].ToString() #>Repository dal)
        {
            this.dal = dal;
			base.baseDal = dal;
        }
       
    }
}
	
	<# 
		manager.EndBlock(); 
		} 

		manager.Process(true);
	}
	#> 

